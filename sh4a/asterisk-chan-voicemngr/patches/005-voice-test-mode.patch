--- a/src/channels/chan_voicemngr.c
+++ b/src/channels/chan_voicemngr.c
@@ -209,6 +209,7 @@
 #define RTP_DTMF_SIZE 4
 
 static bool internet_connection = false;
+static bool voice_test_mode = false;
 
 enum {
 	EVENT_TYPE,
@@ -246,6 +247,18 @@
 static const struct blobmsg_policy network_interface_policy[] = {
 	[INTERNET_STATUS] = {
 		.name = "up",
+		.type = BLOBMSG_TYPE_BOOL
+	},
+};
+
+enum {
+	VOICE_TEST_MODE,
+	__VOICE_SERVICES_ARR_MAX,
+};
+
+static const struct blobmsg_policy voice_services_policy[] = {
+	[VOICE_TEST_MODE] = {
+		.name = "test_mode",
 		.type = BLOBMSG_TYPE_BOOL
 	},
 };
@@ -2470,6 +2483,37 @@
 	return (ret == UBUS_STATUS_OK ? 0 : -1);
 }
 
+static void check_voice_test_mode_cb(struct ubus_request *req, int type, struct blob_attr *msg) {
+	bool *test_mode = (bool *)req->priv;
+	struct blob_attr *tb[__VOICE_SERVICES_ARR_MAX];
+	blobmsg_parse(voice_services_policy, __VOICE_SERVICES_ARR_MAX, tb, blob_data(msg), blob_len(msg));
+
+	if (tb[VOICE_TEST_MODE] && blobmsg_get_bool(tb[VOICE_TEST_MODE])) {
+		*test_mode = true;
+	}
+	ast_verbose("Voice test mode: %s\n", *test_mode ? "enabled" : "disabled");
+}
+
+/* Calls ubus to check for voice.services status
+ * Parses the test_mode value and sets voice_test_mode accordingly
+ */
+static int check_voice_test_mode(void) {
+	uint32_t id;
+	struct blob_buf bb;
+	ubus_lookup_id(ctx, "voice.services", &id);
+	if(!id) {
+		return -1;
+	}
+
+	memset(&bb, 0, sizeof(bb));
+	blob_buf_init(&bb, 0);
+	int ret = ubus_invoke(ctx, id, "status", bb.head, check_voice_test_mode_cb, &voice_test_mode, 2000);
+	if(ret != UBUS_STATUS_OK) {
+		ast_log(LOG_ERROR, "Failed to get voice test mode status\n");
+	}
+	blob_buf_free(&bb);
+	return ret;
+}
 
 static int check_is_sip_account_registered(const char *line, const char *sip_account)
 {
@@ -2592,7 +2636,7 @@
 			} else if (sub->channel_state == OFFHOOK) {
 				/* EVENT_OFFHOOK changed endpoint state to OFFHOOK, apply dialtone */
 				if ( p->context[0] != '\0' ) {
-					if (internet_connection && is_sip_account_registered(p->context)) {
+					if (voice_test_mode || (internet_connection && is_sip_account_registered(p->context))) {
 						ast_debug(9, "Resetting dial tones.\n");
 						p->dialtone = voicemail_messages_waiting(p->context) ? mwi_dialtone_state : DIALTONE_ON;
 						chan_voicemngr_signal_dialtone(p);
@@ -4056,6 +4100,10 @@
 		goto err;
 	}
 
+
+	/* Check for voice services test mode */
+	check_voice_test_mode();
+
 	/* Run pe_base_dispatch in separate thread. */
 	if (ast_pthread_create_background(&ubus_thread, NULL, pe_base_run, NULL) < 0) {
 		ast_log(LOG_ERROR, "Unable to start ubus thread.\n");
