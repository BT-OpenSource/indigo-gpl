Index: libbbfdm-6.8.9.20/dmtree/tr181/ieee1905.c
===================================================================
--- libbbfdm-6.8.9.20.orig/dmtree/tr181/ieee1905.c
+++ libbbfdm-6.8.9.20/dmtree/tr181/ieee1905.c
@@ -395,6 +395,39 @@ static int ubus_ieee1905_info_interface_
 	return 0;
 }
 
+static int ubus_ieee1905_info_nonneighbor_mediatype(const char *option, char **value)
+{
+	json_object *res = NULL, *device_obj = NULL, *arrobj = NULL, *interface_obj = NULL;
+
+	dmubus_call("ieee1905", "info", UBUS_ARGS{0}, 0, &res);
+	if (res) {
+		char *num_dev = dmjson_get_value(res, 2, "topology", "num_device");
+		int i = 0, j = 0;
+
+		for (int device = 0; device <= atoi(num_dev); device++) {
+			device_obj = dmjson_select_obj_in_array_idx(res, i, 2, "topology", "device");
+			char *num_intf = dmjson_get_value(device_obj, 1, "num_interface");
+			bool match = 0;
+			if (atoi(num_intf) > 0) {
+				dmjson_foreach_obj_in_array(device_obj, arrobj, interface_obj, j, 1, "interface") {
+					char *mac = dmjson_get_value(interface_obj, 1, "macaddress");
+					if (mac && !strncmp(option, mac, strlen(option))) {
+						char *media = dmjson_get_value(interface_obj, 1, "media");
+						*value = get_datamodel_media_type(media);
+						match = 1;
+						break;
+					}
+				}
+			}
+			i++;
+			if (match == 1)
+				break;
+		}
+	}
+
+	return 0;
+}
+
 /*************************************************************
 * GET & SET PARAM
 **************************************************************/
@@ -1433,11 +1466,11 @@ static int get_IEEE1905ALNetworkTopology
 	return 0;
 }
 
-/*#Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}.LocalInterfaceMediaType!UBUS:ieee1905/info//topology.device[@i-1].ieee1905_neighbors[@i-1].macaddress*/
+/*#Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}.LocalInterfaceMediaType!UBUS:ieee1905/info//topology.device[@i-1].non1905_neighbors[@i-1].interface_macaddress*/
 static int get_IEEE1905ALNetworkTopologyIEEE1905DeviceNonIEEE1905Neighbor_LocalInterfaceMediaType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value)
 {
 	char *linker = ((struct ieee1905_device_nonieee1905neighbor_args *)data)->mac_addr;
-	ubus_ieee1905_info_interface_option(linker, value);
+	ubus_ieee1905_info_nonneighbor_mediatype(linker, value);
 	return 0;
 }
 /*#Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}.NeighborInterfaceId!UBUS:ieee1905/info//topology.device[@i-1].non1905_neighbors[@i-1].neighbors*/
