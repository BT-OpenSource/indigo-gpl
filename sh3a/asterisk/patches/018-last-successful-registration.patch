--- a/res/res_pjsip_outbound_registration.c
+++ b/res/res_pjsip_outbound_registration.c
@@ -27,6 +27,7 @@
 
 #include <pjsip.h>
 #include <pjsip_ua.h>
+#include <time.h>
 
 #include "asterisk/res_pjsip.h"
 #include "asterisk/res_pjsip_cli.h"
@@ -403,6 +404,8 @@ struct sip_outbound_registration_client_
 	char *registration_name;
 	/*! \brief Indicator, if there was a 494 response before */
 	unsigned int is494;
+	/*! \brief Last successful registration time (seconds since unix epoch) */
+	unsigned int last_successful_registration;
 };
 
 /*! \brief Outbound registration state information (persists for lifetime that registration should exist) */
@@ -1248,6 +1251,8 @@ static int handle_registration_response(
 			schedule_registration(response->client_state,
 					next_registration_time(response->expiration));
 
+			response->client_state->last_successful_registration = time(NULL);
+
 			/* See if we should monitor for transport shutdown */
 			registration_transport_monitor_setup(response->rdata->tp_info.transport,
 				response->client_state->registration_name);
@@ -1490,6 +1495,7 @@ static struct sip_outbound_registration_
 	}
 
 	state->registration = ao2_bump(registration);
+	state->client_state->last_successful_registration = 0;
 	return state;
 }
 
@@ -2406,7 +2412,7 @@ static int cli_print_header(void *obj, v
 	ast_assert(context->output_buffer != NULL);
 
 	ast_str_append(&context->output_buffer, 0,
-		" <Registration/ServerURI..............................>  <Auth..........>  <Status.......>\n");
+		" <Registration/ServerURI..............................>  <Auth..........>  <Status.......>  <Last Successful Registration Time>\n");
 
 	return 0;
 }
@@ -2421,7 +2427,7 @@ static int cli_print_body(void *obj, voi
 
 	ast_assert(context->output_buffer != NULL);
 
-	ast_str_append(&context->output_buffer, 0, " %-s/%-*.*s  %-16s  %-16s\n",
+	ast_str_append(&context->output_buffer, 0, " %-s/%-*.*s  %-16s  %-16s  %-35d\n",
 		id,
 		(int) (REGISTRATION_URI_FIELD_LEN - strlen(id)),
 		(int) (REGISTRATION_URI_FIELD_LEN - strlen(id)),
@@ -2429,7 +2435,8 @@ static int cli_print_body(void *obj, voi
 		AST_VECTOR_SIZE(&registration->outbound_auths)
 			? AST_VECTOR_GET(&registration->outbound_auths, 0)
 			: "n/a",
-		(state ? sip_outbound_registration_status_str(state->client_state->status) : "Unregistered"));
+		(state ? sip_outbound_registration_status_str(state->client_state->status) : "Unregistered"),
+		state->client_state->last_successful_registration);
 	ao2_cleanup(state);
 
 	if (context->show_details
