From a7dcfa837aa8ba0474b2b4d261d6f79d378725fe Mon Sep 17 00:00:00 2001
From: Simon Tate <simon.tate@bt.com>
Date: Fri, 20 Jan 2023 13:42:46 +0000
Subject: [PATCH] ubus set with tables didn't apply

If the user was setting multiple matches to resolved paths, the ubus
call usp set would only set the first parameter.

This changes the order of the for loops to account for the
__blob_for_each_attr moving an internal ptr on. So changes the for loops
to move the inner to outer and vice versa.
---
 src/set.c | 52 ++++++++++++++++++++++++++--------------------------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/src/set.c b/src/set.c
index 4eb6b79..0c5ff4d 100644
--- a/src/set.c
+++ b/src/set.c
@@ -127,33 +127,33 @@ int fill_pvlist_from_table(char *bpath, struct blob_attr *blob_value, struct lis
 		return fault;
 	}
 
-	list_for_each_entry(p, &resolved_paths, list) {
-		__blob_for_each_attr(attr, blobmsg_data(blob_value), tlen) {
-			hdr = blob_data(attr);
-
-			switch (blob_id(attr)) {
-			case BLOBMSG_TYPE_STRING:
-				snprintf(value, MAX_DM_VALUE, "%s", blobmsg_get_string(attr));
-				break;
-			case BLOBMSG_TYPE_INT8:
-				snprintf(value, MAX_DM_VALUE, "%d", blobmsg_get_u8(attr));
-				break;
-			case BLOBMSG_TYPE_INT16:
-				snprintf(value, MAX_DM_VALUE, "%d", blobmsg_get_u16(attr));
-				break;
-			case BLOBMSG_TYPE_INT32:
-				snprintf(value, MAX_DM_VALUE, "%u", blobmsg_get_u32(attr));
-				break;
-			case BLOBMSG_TYPE_INT64:
-				snprintf(value, MAX_DM_VALUE, "%"PRIu64"", blobmsg_get_u64(attr));
-				break;
-			default:
-				INFO("Unhandled set request type|%x|", blob_id(attr));
-				bbf_cleanup(&bbf_ctx);
-				free_path_list(&resolved_paths);
-				return USP_FAULT_INVALID_ARGUMENT;
-			}
+	__blob_for_each_attr(attr, blobmsg_data(blob_value), tlen) {
+		hdr = blob_data(attr);
+
+		switch (blob_id(attr)) {
+		case BLOBMSG_TYPE_STRING:
+			snprintf(value, MAX_DM_VALUE, "%s", blobmsg_get_string(attr));
+			break;
+		case BLOBMSG_TYPE_INT8:
+			snprintf(value, MAX_DM_VALUE, "%d", blobmsg_get_u8(attr));
+			break;
+		case BLOBMSG_TYPE_INT16:
+			snprintf(value, MAX_DM_VALUE, "%d", blobmsg_get_u16(attr));
+			break;
+		case BLOBMSG_TYPE_INT32:
+			snprintf(value, MAX_DM_VALUE, "%u", blobmsg_get_u32(attr));
+			break;
+		case BLOBMSG_TYPE_INT64:
+			snprintf(value, MAX_DM_VALUE, "%"PRIu64"", blobmsg_get_u64(attr));
+			break;
+		default:
+			INFO("Unhandled set request type|%x|", blob_id(attr));
+			bbf_cleanup(&bbf_ctx);
+			free_path_list(&resolved_paths);
+			return USP_FAULT_INVALID_ARGUMENT;
+		}
 
+		list_for_each_entry(p, &resolved_paths, list) {
 			snprintf(path, MAX_DM_PATH, "%s%s", p->path, (char *)hdr->name);
 			add_pv_node(path, value, NULL, pv_list);
 		}
-- 
2.39.1

