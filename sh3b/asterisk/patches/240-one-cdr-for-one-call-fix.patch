--- a/main/cdr.c
+++ b/main/cdr.c
@@ -3714,11 +3714,36 @@ static void post_cdr(struct ast_cdr *cdr)
 {
 	struct module_config *mod_cfg;
 	struct cdr_beitem *i;
+	struct ast_cdr *head_cdr = cdr;
+	struct ast_cdr *newest_cdr = NULL;
+	int answered = 0;
 
 	mod_cfg = ao2_global_obj_ref(module_configs);
 	if (!mod_cfg) {
 		return;
 	}
+	for (; cdr; cdr = cdr->next) {
+		if (cdr->disposition == AST_CDR_ANSWERED) {
+			ast_debug(1, "Mark the CDR as answered %s n", cdr->channel);
+			answered = 1;
+		}
+		if (ast_strlen_zero(cdr->dcontext) || !strcasecmp(cdr->dcontext, "hangup") ||
+			       	ast_strlen_zero(cdr->dstchannel)) {
+			continue;
+		}
+		if (strcasecmp(cdr->dcontext, "call_line") == 0 && strcasecmp(cdr->lastapp, "Goto") == 0 &&
+				cdr->disposition == AST_CDR_FAILED) {
+			continue;
+		}
+		if (!newest_cdr) {
+			newest_cdr = cdr;
+			continue;
+		}
+		if (ast_tvcmp(cdr->end, newest_cdr->end) == 1) {
+		    newest_cdr = cdr;
+		}
+	}
+	cdr = head_cdr;
 
 	for (; cdr ; cdr = cdr->next) {
 		/* For people, who don't want to see unanswered single-channel events */
@@ -3728,6 +3753,20 @@ static void post_cdr(struct ast_cdr *cdr)
 			ast_debug(1, "Skipping CDR for %s since we weren't answered\n", cdr->channel);
 			continue;
 		}
+		/*There are multiple extensions configured in asterisk, so for one call there will be multiple cdr entries.
+		The requirement is to log only one entry to Master.csv for one call.
+		If the call was answered by one of the extensions that should be logged but not the entries for other extensions.
+		*/
+		if ((answered == 1) && (cdr->disposition != AST_CDR_ANSWERED)) {
+		    ast_debug(1, "Skipping unanswered CDR for %s \n", cdr->channel);
+		    continue;
+		}
+
+		if (!answered && cdr != newest_cdr) {
+		    ast_debug(1, "Skipping CDR for %s %s. Logging only most recent CDR for unanswered call\n",
+				   cdr->channel, cdr->dstchannel);
+		    continue;
+		}
 
 		/*
 		 * When Asterisk receives an SIP-INVITE from an unknown source, a CDR is generated. The workaround below
@@ -3760,6 +3799,11 @@ static void post_cdr(struct ast_cdr *cdr)
 			}
 		}
 		AST_RWLIST_UNLOCK(&be_list);
+		/*If the call was unanswered, only one entry should be logged into the Master.csv and rest should be ignored.*/
+		if (answered == 0) {
+			ast_debug(1, "Skip rest of the CDR entries as call was not answered\n");
+			break;
+		}
 	}
 	ao2_cleanup(mod_cfg);
 }
