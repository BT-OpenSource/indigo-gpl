Index: dnsmasq-2.80/src/lease.c
===================================================================
--- dnsmasq-2.80.orig/src/lease.c
+++ dnsmasq-2.80/src/lease.c
@@ -287,7 +287,7 @@ void lease_update_file(time_t now)
 	  inet_ntop(AF_INET, &lease->addr, daemon->addrbuff, ADDRSTRLEN); 
 
 	  ourprintf(&err, " %s ", daemon->addrbuff);
-	  ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
+	  ourprintf(&err, "%s ", lease->hostname ? lease->hostname : (daemon->userhostname ? daemon->userhostname : "*"));
 	  	  
 	  if (lease->clid && lease->clid_len != 0)
 	    {
@@ -323,7 +323,7 @@ void lease_update_file(time_t now)
 	 
 	      ourprintf(&err, "%s%u %s ", (lease->flags & LEASE_TA) ? "T" : "",
 			lease->iaid, daemon->addrbuff);
-	      ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
+	      ourprintf(&err, "%s ", lease->hostname ? lease->hostname : (daemon->userhostname ? daemon->userhostname : "*"));
 	      
 	      if (lease->clid && lease->clid_len != 0)
 		{
Index: dnsmasq-2.80/src/dnsmasq.h
===================================================================
--- dnsmasq-2.80.orig/src/dnsmasq.h
+++ dnsmasq-2.80/src/dnsmasq.h
@@ -1130,6 +1130,7 @@ extern struct daemon {
   /* file for packet dumps. */
   int dumpfd;
 #endif
+  char *userhostname;
 } *daemon;
 
 /* cache.c */
Index: dnsmasq-2.80/src/option.c
===================================================================
--- dnsmasq-2.80.orig/src/option.c
+++ dnsmasq-2.80/src/option.c
@@ -186,6 +186,7 @@ struct myoption {
 #define LOPT_STALE_CACHE   377
 #define LOPT_NORR          378
 #define LOPT_NO_IDENT      379
+#define LOPT_USER_HOSTNAME 380
 
 #ifdef HAVE_GETOPT_LONG
 static const struct option opts[] =  
@@ -376,6 +377,7 @@ static const struct myoption opts[] =
     { "fast-dns-retry", 2, 0, LOPT_FAST_RETRY },
     { "use-stale-cache", 2, 0 , LOPT_STALE_CACHE },
     { "no-ident", 0, 0, LOPT_NO_IDENT },
+	{ "add-userhostname", 1, 0, LOPT_USER_HOSTNAME},
     { NULL, 0, 0, 0 }
   };
 
@@ -573,6 +575,7 @@ static struct {
   { LOPT_QUIET_TFTP, OPT_QUIET_TFTP, NULL, gettext_noop("Do not log routine TFTP."), NULL },
   { LOPT_NORR, OPT_NORR, NULL, gettext_noop("Suppress round-robin ordering of DNS records."), NULL },
   { LOPT_NO_IDENT, OPT_NO_IDENT, NULL, gettext_noop("Do not add CHAOS TXT records."), NULL },
+  { LOPT_USER_HOSTNAME, ARG_ONE, "<host_name>", gettext_noop("Default hostname if no hostname provided by the DHCP client."), NULL },
   { 0, 0, NULL, NULL, NULL }
 }; 
 
@@ -4396,7 +4399,11 @@ err:
 	break;
       }
 #endif
-		
+    case LOPT_USER_HOSTNAME:
+      {
+          daemon->userhostname = opt_string_alloc(arg);   
+      	  break;
+      }	
     default:
       ret_err(_("unsupported option (check that dnsmasq was compiled with DHCP/TFTP/DNSSEC/DBus support)"));
       
